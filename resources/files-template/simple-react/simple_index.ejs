import React, { Component } from "react"
import {
  Navigator,
    TextInput,
    View,
    DatePickerIOS,
    TouchableOpacity,
    Picker,
    StyleSheet,
    Image,
    Text

} from 'react-native';

import ScrollableTabView, {DefaultTabBar, } from 'react-native-scrollable-tab-view';

import {PlusOperatePage,PlusItemNavigator,PlusItemIcon} from 'uhutu-plus';

import top_support from "../../../code/top/support/top_support";
import current_support from "../../../code/current/support/current_support";

 

import styles from "../../../pages/air/resource/layout-style";



<% paths.forEach((fItem)=>{%>
<%- fItem.importName %><% }) %>
//初始化程序

class ScreenMain  extends Component{

  static navigationOptions = {
    title: '测试系统',

  }
  render() {
    return <ScrollableTabView
      tabBarPosition="bottom"
      renderTabBar={() => <PlusItemNavigator 

      styleBaseBox={styles.layout_tab_base_box} 
      styleNormalIcon={styles.layout_tab_normal_icon} 
      styleNormalText={styles.layout_tab_normal_text}
      styleActiveText={styles.layout_tab_active_text}
      styleActiveIcon={styles.layout_tab_active_icon}
      
       />}

      
    >
      

<% out.tabItems.forEach((fTabItem)=>{ %>

  <View style={{flex:1}} tabLabel={{iconName:'<%= fTabItem.iconName %>',tabTitle:'<%= fTabItem.tabName %>'}} >
      <RouteStack.<%= fTabItem.screenName %>.routeScreen  />
      </View>

  
  <% }) %>

    </ScrollableTabView>;
  } 

}


const RouteStack={
<% paths.forEach((fItem)=>{%>
<%- fItem.uqName %>:{routeScreen:<%- fItem.uqName %>},<% }) %>
root_layout_main:{routeScreen:ScreenMain}
};







export  default class  extends Component{

  constructor(props){
    super(props);
    current_support.initApplication(this);
  }

  _renderScene(router, navigator) {
    

      PlusOperatePage.pageNavInit(navigator,RouteStack);

    return <router.routeScreen navigation={navigator}  />

  }
    
  render() {
    return (
      
      <Navigator
          ref="navigator"
          style={styles.layout_nav_navigator}
          initialRoute={RouteStack.root_layout_main}
          renderScene={this._renderScene}
          navigationBar={
              <Navigator.NavigationBar
              routeMapper={{
                LeftButton: (route, navigator, index, navState) =>
                  { 
                  
                  if (index > 0) {
              return (
                <PlusItemIcon style={styles.w_nav_icon} name="ios-arrow-back-outline" onPress={() => {if (index > 0) {navigator.pop()}}}></PlusItemIcon>
              );
            } else {
              return null;
            }
                   },
                RightButton: (route, navigator, index, navState) =>
                  { return (route.routeScreen.navigationOptions.navRight); },
                Title: (route, navigator, index, navState) =>
                  { return (<Text style={styles.layout_nav_title}>{route.routeScreen.navigationOptions.title}</Text>); },
              }}
              style={styles.layout_nav_header}
            />
          }
          >
          </Navigator>
          
    );
  }
}


