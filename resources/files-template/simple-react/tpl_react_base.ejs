import React, { Component } from 'react';

import {
  TouchableOpacity,
  StyleSheet,
  Text,
  Image,
  ListView,
  FlatList,
  ScrollView,
  TextInput,
  Dimensions,
  Switch,
  View
} from 'react-native';

import {PlusFormSelect,PlusFormImage,PlusFormInput,PlusFormDate,PlusOperateForm,PlusOperatePage,PlusItemButton,PlusItemIcon,PlusFormSwitch} from 'uhutu-plus';
import ScrollableTabView, {DefaultTabBar, } from 'react-native-scrollable-tab-view';

import styles from "<%- out.pageConfig.styleFile %>-style";

import RootSuperPage from "../../../simple/root/super/super_page";
import top_support from "../../../code/top/support/top_support";
import current_support from "../../../code/current/support/current_support";



export default class  extends Component {

  constructor(props) {
    super(props);

    top_support.initPage(this,<%- JSON.stringify(out.pageProperty) %>);

  

    this.state = {
      <% out.templateInfos.forEach((template)=>{ %>
      <% if (template.templateSource!=''){%>

      
      x_template_data_<%- template.templateName-%>:<%if(template.templateSource.startsWith('@')){%><%-template.templateSource.substr(1) %><%}else{%> new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2}).cloneWithRows(<%- template.templateSource!=''?template.templateSource:'[]'-%>)<%}%>,
      
      <%}%>
      <% }) %>
      rootAsyncShow:<%= (out.pageConfig.asyncShow=="true")?"true":"false" %>};
  }


  <% out.templateInfos.forEach((template)=>{ %>
  x_template_render_<%- template.templateName %>(item){
    return (
    <%- template.templateContent.join('') %>
    )
  }
<% }) %>

  <% if (out.pageConfig.execReact !=undefined ){ %>
  <%- out.pageConfig.execReact.join('\n') %>
<% } %>

  <% out.scriptInfos.forEach((scriptInfo)=>{ %>
        <%- scriptInfo.scriptContent.replace(/function/g,'')-%>
      <% }) %>



  static navigationOptions = {
    title: '<%- out.pageConfig.pageTitle %>',
    <% if(out.pageConfig.navToolOption!='') {%>
      <% out.templateInfos.forEach((template)=>{ if(template.templateName==out.pageConfig.navToolOption){ %>
      navRight: <%- template.templateContent.join('') %>
      <% }}) %>
    <%} %>
  };

  componentDidMount() {
    

    <%- out.pageConfig.scriptInit %>
  }
 

  render(){
    return (
      <%- out.content.join('') %>
    )
  }

};
